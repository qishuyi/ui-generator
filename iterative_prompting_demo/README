Iterative Prompting client is based on Langchain. Install it with the following command in your project
    npm install iterative-prompting-client

Currently it exposes the API methods listed below. Refer to ./src/sample_usage.js for demo of more detailed use:

0. **Constructor**: Accepts client-side user-id & session-id for our benefit. Also requires a working api-key and an optional temperature parameter (default 0.5)
1. **async initialPrompt(prompt: string): Promise<string>**: Used for first-time setup of our gpt client
2. **async iterativePrompt(feedback: string): Promise<string>**: Used for providing further feedback on the webpage.
3. **getPromptHistory(depth: number): HumanMessage[]**: Used for retrieving last ${depth} user interaction history with chatgpt. 
4. **getPageHistory(depth: number): string[]**: Used for retrieving last ${depth} webpage generated by chatgpt. 

Now offering support for local file access/manipulation in LocalClient for library version 1.3.1 and above:

1. **async executeCommand(command: string, permissionHook: () => boolean)**: Executes a shell command if permitted by the permissionHook.
2. **async createDirectory(directoryPath: string, permissionHook: () => boolean)**: Creates a new directory at the specified path if permitted by the permissionHook.
3. **async writeFile(filePath: string, content: string, permissionHook: () => boolean)**: Writes the specified content to a file at the given path if permitted by the permissionHook.
4. **async npmRunBuild(projectPath: string, permissionHook: () => boolean)**: Runs an npm build command in the specified project directory if permitted by the permissionHook.
